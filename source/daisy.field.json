{
    "max_apps":8,
	"defines": {
		"OOPSY_TARGET_FIELD": 1,
		"OOPSY_TARGET_HAS_OLED": 1,
		"OOPSY_TARGET_HAS_MIDI_INPUT": 1,
		"OOPSY_TARGET_HAS_MIDI_OUTPUT": 1,
		"OOPSY_HAS_PARAM_VIEW": 1
	},
    "inserts": [
		{ "where": "header", "code": "#include \"daisy_field.h\"" },
		{ "where": "header", "code": "typedef daisy::DaisyField Daisy;" }
	],
	"labels": {
		"params": {
			"knob1": "kn1",
			"knob2": "kn2",
			"knob3": "kn3",
			"knob4": "kn4",
			"knob5": "kn5",
			"knob6": "kn6",
			"knob7": "kn7",
			"knob8": "kn8",
			"keyA1": "kB1",
			"keyA2": "kB2",
			"keyA3": "kB3",
			"keyA4": "kB4",
			"keyA5": "kB5",
			"keyA6": "kB6",
			"keyA7": "kB7",
			"keyA8": "kB8",
			"keyB1": "kA1",
			"keyB2": "kA2",
			"keyB3": "kA3",
			"keyB4": "kA4",
			"keyB5": "kA5",
			"keyB6": "kA6",
			"keyB7": "kA7",
			"keyB8": "kA8",
			"sw1": "sw1",
			"sw2": "sw2",
			"cv1": "cv1",
			"cv2": "cv2",
			"cv3": "cv3",
			"cv4": "cv4",
			"gate1": "gt1",

			"key1": "kA1",
			"key2": "kA2",
			"key3": "kA3",
			"key4": "kA4",
			"key5": "kA5",
			"key6": "kA6",
			"key7": "kA7",
			"key8": "kA8",
			"key9": "kB1",
			"key10": "kB2",
			"key11": "kB3",
			"key12": "kB4",
			"key13": "kB5",
			"key14": "kB6",
			"key15": "kB7",
			"key16": "kB8",
			"ctrl1": "kn1",
			"ctrl2": "kn2",
			"ctrl3": "kn3",
			"ctrl4": "kn4",
			"ctrl5": "kn5",
			"ctrl6": "kn6",
			"ctrl7": "kn7",
			"ctrl8": "kn8",
			"switch1": "sw1",
			"switch2": "sw2",

			"knob": "kn",
			"key": "kA1",
			"ctrl": "kn",
			"cv": "cv1",
			"gate": "gt1",
			"switch": "sw1"
		},
		"outs": {
			"cv": "cvout1",
			"cv1": "cvout1",
			"cv2": "cvout2",
			"gate": "gateout1",
			"gate1": "gateout1"
		},
		"datas": {
			"leds": "dsy_leds"
		}
	},
	"inputs": {
		"kn1": {
			"automap": true,
        	"code": "hardware.GetKnobValue(hardware.KNOB_1);"
		},
		"kn2": {
			"automap": true,
        	"code": "hardware.GetKnobValue(hardware.KNOB_2);"
		},
		"kn3": {
			"automap": true,
        	"code": "hardware.GetKnobValue(hardware.KNOB_3);"
		},
		"kn4": {
			"automap": true,
        	"code": "hardware.GetKnobValue(hardware.KNOB_4);"
		},
		"kn5": {
			"automap": true,
        	"code": "hardware.GetKnobValue(hardware.KNOB_5);"
		},
		"kn6": {
			"automap": true,
        	"code": "hardware.GetKnobValue(hardware.KNOB_6);"
		},
		"kn7": {
			"automap": true,
        	"code": "hardware.GetKnobValue(hardware.KNOB_7);"
		},
		"kn8": {
			"automap": true,
        	"code": "hardware.GetKnobValue(hardware.KNOB_8);"
		},
		"kA1": {
			"code": "(hardware.KeyboardState(0)?1.f:0.f);"
		},
		"kA2": {
			"code": "(hardware.KeyboardState(1)?1.f:0.f);"
		},
		"kA3": {
			"code": "(hardware.KeyboardState(2)?1.f:0.f);"
		},
		"kA4": {
			"code": "(hardware.KeyboardState(3)?1.f:0.f);"
		},
		"kA5": {
			"code": "(hardware.KeyboardState(4)?1.f:0.f);"
		},
		"kA6": {
			"code": "(hardware.KeyboardState(5)?1.f:0.f);"
		},
		"kA7": {
			"code": "(hardware.KeyboardState(6)?1.f:0.f);"
		},
		"kA8": {
			"code": "(hardware.KeyboardState(7)?1.f:0.f);"
		},
		"kB1": {
			"code": "(hardware.KeyboardState(8)?1.f:0.f);"
		},
		"kB2": {
			"code": "(hardware.KeyboardState(9)?1.f:0.f);"
		},
		"kB3": {
			"code": "(hardware.KeyboardState(10)?1.f:0.f);"
		},
		"kB4": {
			"code": "(hardware.KeyboardState(11)?1.f:0.f);"
		},
		"kB5": {
			"code": "(hardware.KeyboardState(12)?1.f:0.f);"
		},
		"kB6": {
			"code": "(hardware.KeyboardState(13)?1.f:0.f);"
		},
		"kB7": {
			"code": "(hardware.KeyboardState(14)?1.f:0.f);"
		},
		"kB8": {
			"code": "(hardware.KeyboardState(15)?1.f:0.f);"
		},
		"sw1": {
			"code": "(hardware.GetSwitch(0)->Pressed()?1.f:0.f);"
		},
		"sw2": {
			"code": "(hardware.GetSwitch(1)->Pressed()?1.f:0.f);"
		},
		"cv1": {
			"code": "hardware.GetCvValue(0);"
		},
		"cv2": {
			"code": "hardware.GetCvValue(1);"
		},
		"cv3": {
			"code": "hardware.GetCvValue(2);"
		},
		"cv4": {
			"code": "hardware.GetCvValue(3);"
		},
		"gt1": {
			"code": "(hardware.gate_in.State()?1.f:0.f);"
		}
	},
	"outputs": {
		"cvout1": {
			"where":"main",
			"code": "hardware.SetCvOut1($<name> * 4095);"
		},
		"cvout2": {
			"where":"main",
			"code": "hardware.SetCvOut2($<name> * 4095);"
		},
		"gateout1": {
			"where":"audio",
			"code": "dsy_gpio_write(&hardware.gate_out, $<name> > 0.f);"
		}
	},
	"datahandlers": {
		"dsy_leds": {
			"where":"display",
			"code": "daisy.setFieldLedsFromData($<data>);"
		}
	}
}
